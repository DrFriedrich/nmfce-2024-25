###W10-W2_parta_start_py
# Define function to calculate volume of box
def calcVolume(x):
    length = x[0]
    width = x[1]
    height = x[2]
    return length * width * height
###W10-W2_parta_end

###W10-W2_partb_start_py
# Define function to calculate surface area of box
def calcSurface(x):
    length = x[0]
    width = x[1]
    height = x[2]
    surfaceArea = 2*length*width + 2*length*height + 2*height*width
    return surfaceArea
###W10-W2_partb_end

###W10-W2_partc_start_py
import numpy as np
from scipy.optimize import minimize

# Define objective function for optimization
def objective(x):
    return -calcVolume(x)

# Define constraint for optimization
def constraint(x):
    return 10 - calcSurface(x)

# Load constraints into dictionary form
cons = ({'type': 'ineq', 'fun': constraint})

# Set initial guess values for box dimensions
lengthGuess = 1
widthGuess = 1
heightGuess = 1

# Load guess values into numpy array
x0 = np.array([lengthGuess, widthGuess, heightGuess])

res = minimize(objective, x0, method='COBYLA', constraints=cons)
print(res)
###W10-W2_partc_end
